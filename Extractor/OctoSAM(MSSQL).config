<?xml version="1.0" encoding="utf-8" ?>
<configuration LoaderConfig="disc4_loader_config_201304" Disc_Source="OctoSAM">

	<Connection Type="MSSQLSERVER">
		<Property Name="Data Source" Value="localhost"/>
		<Property Name="Initial Catalog" Value="OctoSAM"/>
		<Property Name="Persist Security Info" Value="True"/>
		<Property Name="User ID" Value=""/>
		<Property Name="Password" Value=""/>
		<Property Name="Integrated Security" Value="true"/>
	</Connection>

	<Tables>
		<!--
		<Table Type="AddRemove">
			<SQL>
				<![CDATA[
						SELECT DISTINCT
							  APPSOFTWARESUITES.COMPUTER_IDN as ResourceID,
							  CASE APPSOFTWARESUITES.PRODUCTID WHEN 'Unknown' THEN null WHEN 'Inconnu(e)' THEN null ELSE APPSOFTWARESUITES.PRODUCTID END as ProdID,
							  CASE APPSOFTWARESUITES.SUITENAME WHEN 'Unknown' THEN null WHEN 'Inconnu(e)' THEN null ELSE APPSOFTWARESUITES.SUITENAME END as DisplayName,
							  CASE APPSOFTWARESUITES.PUBLISHER WHEN 'Unknown' THEN null WHEN 'Inconnu(e)' THEN null ELSE APPSOFTWARESUITES.PUBLISHER END as Publisher,
							  CASE APPSOFTWARESUITES.VERSION WHEN 'Unknown' THEN null WHEN 'Inconnu(e)' THEN null ELSE APPSOFTWARESUITES.VERSION END as Version,
							  null as InstallDate
						FROM APPSOFTWARESUITES
						INNER JOIN (
							SELECT COMPUTER_IDN FROM COMPUTER
						)T ON T.COMPUTER_IDN=APPSOFTWARESUITES.COMPUTER_IDN
				]]>
</SQL>
</Table>
<Table Type="ProductFileInfo">
<SQL>
<![CDATA[
				SELECT DISTINCT
					  FILEINFO_IDN as FileID,
					  FILENAME as FileName,
					  TITLE as FileDescription,
					  VERSION as FileVersion,
					  FILESIZE as FileSize,
					  VENDOR as CompanyName,
					  TITLE as ProductName,
					  VERSION as ProductVersion, 
					  null as ProductLanguage
				FROM FILEINFO
				WHERE FILENAME LIKE '%.EXE'
		]]>
</SQL>
</Table>
<Table Type="SystemSoftwareFile">
<SQL>
<![CDATA[
				SELECT DISTINCT 
					  FILEINFOINSTANCE.COMPUTER_IDN as ResourceID,
					  FILEINFOINSTANCE.FILEINFO_IDN as FileID,
					  null as InstallDate
				FROM FILEINFOINSTANCE
				INNER JOIN (
					SELECT COMPUTER_IDN FROM COMPUTER
				)T ON T.COMPUTER_IDN=FILEINFOINSTANCE.COMPUTER_IDN
				WHERE FILEINFOINSTANCE.PATH LIKE '%.EXE' AND FILEINFOINSTANCE.FILEINFO_IDN IS NOT NULL
		]]>
</SQL>
</Table>
	-->

		<Table Type="AddRemove">
			<SQL>
				<![CDATA[
select m.ID                                   as ResourceID
     , case
           when not try_convert(uniqueidentifier, ss.ProductCode) is null then
               ss.ProductCode
           else
               null
       end                                    as ProdID
     , replace(ss.ScanSignature, 'MSI: ', '') as DisplayName
     , ss.Publisher
     , ss.Version                             as Version
     , mss.InstallDate
from dbo.Machine                            m
    inner join dbo.MachineSoftwareSignature mss
        on mss.MachineID = m.ID
    inner join dbo.SoftwareSignature    ss
        on ss.ID = mss.SoftwareSignatureID
where m.OperatingSystemFamily = 'WIN'
      and ss.Dynamic = 0
      and ss.ScanSignature not like 'swid:%'
      and ss.ScanSignature not like 'java:%'
      and ss.ScanSignature not like 'msoc2r:%'
      and ss.ScanSignature not like 'appx:%'
      and ss.ScanSignature not like 'msvs:%'
      and ss.ScanSignature not like 'mssql:%'
				]]>
			</SQL>
		</Table>


		<Table Type="System">
			<SQL>
				<![CDATA[
select m.ID                       as ResourceID
     , m.DirectorySiteName        as AD_Site
     , coalesce(u.LoginName, '')  as User_name
     , coalesce(u.DomainName, '') as User_domain
     , m.Name                     as [Name]
     , m.DomainName               as DomainName
     , cast(m.Active as int)      as Active
     , cast(m.DeletedInDirectory as int) as Obsolete
from dbo.Machine               m
    left outer join dbo.[User] u
        on u.ID = m.MostFrequentUserID
where m.OperatingSystemFamily = 'WIN'
		]]>
			</SQL>
		</Table>

		<Table Type="GS_OPERATING_SYSTEM">
			<SQL>
				<![CDATA[

select m.ID                         as ResourceID
     , (
           select wip.Value
           from dbo.WmiInstanceProperty        wip
               inner join dbo.WmiClassProperty wcp
                   on wcp.ID = wip.WmiClassPropertyID
           where wip.WmiInstanceID = wi.ID
                 and wcp.Name = 'BootDevice'
                 and wcp.WmiClassID = wc.ID
                 and wi.MachineID = m.ID
       )                            as BootDevice
     , m.OperatingSystemBuild       as BuildNumber
     , m.OperatingSystem            as Caption
     , (
           select wip.Value
           from dbo.WmiInstanceProperty        wip
               inner join dbo.WmiClassProperty wcp
                   on wcp.ID = wip.WmiClassPropertyID
           where wip.WmiInstanceID = wi.ID
                 and wcp.Name = 'CountryCode'
                 and wcp.WmiClassID = wc.ID
                 and wi.MachineID = m.ID
       )                            as CountryCode
     , ''                           as CSDVersion -- todo: import this from scan (OctoSAM 1.10.2)
     , m.OperatingSystemInstallDate as InstallDate
     , 'Microsoft'                  as Manufacturer
     , m.OperatingSystem            as [Name]
     , (
           select wip.Value
           from dbo.WmiInstanceProperty        wip
               inner join dbo.WmiClassProperty wcp
                   on wcp.ID = wip.WmiClassPropertyID
           where wip.WmiInstanceID = wi.ID
                 and wcp.Name = 'Locale'
                 and wcp.WmiClassID = wc.ID
                 and wi.MachineID = m.ID
       )                            as OSLanguage
     , (
           select wip.Value
           from dbo.WmiInstanceProperty        wip
               inner join dbo.WmiClassProperty wcp
                   on wcp.ID = wip.WmiClassPropertyID
           where wip.WmiInstanceID = wi.ID
                 and wcp.Name = 'SystemDirectory'
                 and wcp.WmiClassID = wc.ID
                 and wi.MachineID = m.ID
       )                            as SystemDirectory
     , (
           select wip.IntegerValue
           from dbo.WmiInstanceProperty        wip
               inner join dbo.WmiClassProperty wcp
                   on wcp.ID = wip.WmiClassPropertyID
           where wip.WmiInstanceID = wi.ID
                 and wcp.Name = 'TotalVirtualMemorySize'
                 and wcp.WmiClassID = wc.ID
                 and wi.MachineID = m.ID
       )                            as TotalVirtualMemorySize
     , (
           select wip.IntegerValue
           from dbo.WmiInstanceProperty        wip
               inner join dbo.WmiClassProperty wcp
                   on wcp.ID = wip.WmiClassPropertyID
           where wip.WmiInstanceID = wi.ID
                 and wcp.Name = 'TotalVisibleMemorySize'
                 and wcp.WmiClassID = wc.ID
                 and wi.MachineID = m.ID
       )                            as TotalVisibleMemorySize
     , (
           select wip.Value
           from dbo.WmiInstanceProperty        wip
               inner join dbo.WmiClassProperty wcp
                   on wcp.ID = wip.WmiClassPropertyID
           where wip.WmiInstanceID = wi.ID
                 and wcp.Name = 'Version'
                 and wcp.WmiClassID = wc.ID
                 and wi.MachineID = m.ID
       )                            as Version
     , (
           select wip.Value
           from dbo.WmiInstanceProperty        wip
               inner join dbo.WmiClassProperty wcp
                   on wcp.ID = wip.WmiClassPropertyID
           where wip.WmiInstanceID = wi.ID
                 and wcp.Name = 'WIndowsDirectory'
                 and wcp.WmiClassID = wc.ID
                 and wi.MachineID = m.ID
       )                            as WindowsDirectory
from dbo.Machine                    m
    left outer join dbo.WmiInstance wi
        on wi.MachineID = m.ID
    inner join dbo.WmiClass         wc
        on wc.ID = wi.WmiClassID
           and wc.Name = 'Win32_OperatingSystem'
where m.OperatingSystemFamily = 'WIN'


		]]>
			</SQL>
		</Table>

		<Table Type="GS_COMPUTER_SYSTEM">
			<SQL>
				<![CDATA[

select m.ID                 as ResourceID
     , m.Manufacturer       as Manufacturer
     , m.Model              as Model
     , m.NumberOfProcessors as NumberOfProcessors
     , ''                   as SystemType
from Machine m
where m.OperatingSystemFamily = 'WIN'				

		]]>
			</SQL>
		</Table>

		<Table Type="GS_X86_PC_MEMORY">
			<SQL>
				<![CDATA[

select m.ID as ResourceID
     , m.PhysicalMemory as TotalPhysicalMemory
from Machine m
where m.OperatingSystemFamily = 'WIN';

		]]>
			</SQL>
		</Table>


		<Table Type="GS_WORKSTATION_STATUS">
			<SQL>
				<![CDATA[

select m.ID       as ResourceID
     , m.LastScan as LastHWScan
from Machine m
where m.OperatingSystemFamily = 'WIN';				

		]]>
			</SQL>
		</Table>


		<Table Type="GS_LOGICAL_DISK">
			<SQL>
				<![CDATA[

select m.ID as ResourceID
     , (
           select wip.Value
           from dbo.WmiInstanceProperty        wip
               inner join dbo.WmiClassProperty wcp
                   on wcp.ID = wip.WmiClassPropertyID
           where wip.WmiInstanceID = wi.ID
                 and wcp.Name = 'Description'
                 and wcp.WmiClassID = wc.ID
                 and wi.MachineID = m.ID
       )    as Description
     , (
           select wip.Value
           from dbo.WmiInstanceProperty        wip
               inner join dbo.WmiClassProperty wcp
                   on wcp.ID = wip.WmiClassPropertyID
           where wip.WmiInstanceID = wi.ID
                 and wcp.Name = 'FileSystem'
                 and wcp.WmiClassID = wc.ID
                 and wi.MachineID = m.ID
       )    as FileSystem
     , (
           select wip.Value
           from dbo.WmiInstanceProperty        wip
               inner join dbo.WmiClassProperty wcp
                   on wcp.ID = wip.WmiClassPropertyID
           where wip.WmiInstanceID = wi.ID
                 and wcp.Name = 'FreeSpace'
                 and wcp.WmiClassID = wc.ID
                 and wi.MachineID = m.ID
       )    as FreeSpace
     , (
           select wip.Value
           from dbo.WmiInstanceProperty        wip
               inner join dbo.WmiClassProperty wcp
                   on wcp.ID = wip.WmiClassPropertyID
           where wip.WmiInstanceID = wi.ID
                 and wcp.Name = 'Name'
                 and wcp.WmiClassID = wc.ID
                 and wi.MachineID = m.ID
       )    as Name
     , (
           select wip.Value
           from dbo.WmiInstanceProperty        wip
               inner join dbo.WmiClassProperty wcp
                   on wcp.ID = wip.WmiClassPropertyID
           where wip.WmiInstanceID = wi.ID
                 and wcp.Name = 'Size'
                 and wcp.WmiClassID = wc.ID
                 and wi.MachineID = m.ID
       )    as Size
     , (
           select wip.Value
           from dbo.WmiInstanceProperty        wip
               inner join dbo.WmiClassProperty wcp
                   on wcp.ID = wip.WmiClassPropertyID
           where wip.WmiInstanceID = wi.ID
                 and wcp.Name = 'VolumeName'
                 and wcp.WmiClassID = wc.ID
                 and wi.MachineID = m.ID
       )    as VolumeName
     , (
           select wip.Value
           from dbo.WmiInstanceProperty        wip
               inner join dbo.WmiClassProperty wcp
                   on wcp.ID = wip.WmiClassPropertyID
           where wip.WmiInstanceID = wi.ID
                 and wcp.Name = 'VolumeSerialNumber'
                 and wcp.WmiClassID = wc.ID
                 and wi.MachineID = m.ID
       )    as VolumeSerialNumber
from dbo.Machine                   m
    inner join dbo.WmiInstance wi
        on wi.MachineID = m.ID
    inner join dbo.WmiClass    wc
        on wc.ID = wi.WmiClassID
where m.OperatingSystemFamily = 'WIN'
      and wc.Name = 'Win32_LogicalDisk';

		]]>
			</SQL>
		</Table>




		<!--
    <Table Type="GS_OPERATING_SYSTEM">
      <SQL>
        <![CDATA[
						SELECT DISTINCT
							  OPERATING_SYSTEM.COMPUTER_IDN as ResourceID, 
							  null as BootDevice0, 
							  RTRIM(OSNT.CURRENTBUILD) as BuildNumber0, 
							  OPERATING_SYSTEM.OSTYPE as Caption0, 
							  null as CountryCode0, 
							  OSNT.SERVICEPACK as CSDVersion0, 
							  null as InstallDate0, 
							  null as Manufacturer0, 
							  OPERATING_SYSTEM.OSTYPE as Name0, 
							  OSNT.LANGUAGE as OSLanguage0, 
							  null as SystemDirectory0, 
							  null as TotalVirtualMemorySize0, 
							  null as TotalVisibleMemorySize0, 
							  RTRIM(OPERATING_SYSTEM.VERSION) as Version0, 
							  OSNT.SYSTEMROOT as WindowsDirectory0 
						FROM OPERATING_SYSTEM 
						LEFT JOIN OSNT ON  OPERATING_SYSTEM.COMPUTER_IDN=OSNT.COMPUTER_IDN
										AND OPERATING_SYSTEM.OPERATING_SYSTEM_IDN=OSNT.OPERATING_SYSTEM_IDN
						INNER JOIN (
							SELECT COMPUTER_IDN FROM COMPUTER
						)T ON T.COMPUTER_IDN=OPERATING_SYSTEM.COMPUTER_IDN
				]]>
</SQL>
</Table>
<Table Type="GS_PC_BIOS">
<SQL>
<![CDATA[
				SELECT DISTINCT
					  COMPSYSTEM.COMPUTER_IDN as ResourceID,
					  RTRIM(COMPSYSTEM.MANUFACTURER) as Manufacturer0,
					  RTRIM(COMPSYSTEM.SERIALNUM) as SerialNumber0
				FROM COMPSYSTEM
				INNER JOIN (
					SELECT COMPUTER_IDN FROM COMPUTER 
				)T ON T.COMPUTER_IDN=COMPSYSTEM.COMPUTER_IDN
		]]>
</SQL>
</Table>
<Table Type="GS_PROCESSOR">
<SQL>
<![CDATA[
				SELECT DISTINCT
					  PROCESSOR.COMPUTER_IDN as ResourceID,
					  'CPU0' as DeviceID0,
					  null as Family0,
					  RTRIM(PROCESSOR.VENDOR) as Manufacturer0,
					  PROCESSOR.MHZSPEED as MaxClockSpeed0,
					  RTRIM(PROCESSOR.TYPE) as Name0,
					  null as SocketDesignation0
				FROM PROCESSOR 
				INNER JOIN (
					SELECT COMPUTER_IDN FROM COMPUTER 
				)T ON T.COMPUTER_IDN=PROCESSOR.COMPUTER_IDN
		]]>
</SQL>
</Table>
<Table Type="GS_WORKSTATION_STATUS">
<SQL>
<![CDATA[
			SELECT DISTINCT
				  COMPUTER.COMPUTER_IDN as ResourceID,
				  CAST(HWLASTSCANDATE as datetime)  as LastHWScan
			FROM COMPUTER
			INNER JOIN (
				SELECT COMPUTER_IDN FROM COMPUTER 
			)T ON T.COMPUTER_IDN=COMPUTER.COMPUTER_IDN
		]]>
</SQL>
</Table>
<Table Type="GS_X86_PC_MEMORY">
<SQL>
<![CDATA[
				SELECT DISTINCT
					  MEMORY.COMPUTER_IDN as ResourceID,
					  MEMORY.BYTESTOTAL as TotalPhysicalMemory0
				FROM MEMORY 
				INNER JOIN (
							SELECT COMPUTER_IDN FROM COMPUTER 
						)T ON T.COMPUTER_IDN=MEMORY.COMPUTER_IDN
		]]>
</SQL>
</Table>
<Table Type="GS_LOGICAL_DISK">
<SQL>
<![CDATA[
				SELECT DISTINCT 
					  LOGICALDRIVES.COMPUTER_IDN as ResourceID,
					  CASE RTRIM(LOGICALDRIVES.DESCRIPTION) WHEN 'Disque fixe local' THEN 'Local Fixed Disk' ELSE LOGICALDRIVES.DESCRIPTION END as Description0,
					  LOGICALDRIVES.FILESYSTEM as FileSystem0,
					  LOGICALDRIVES.STORAGEAVAIL as FreeSpace0,
					  RTRIM(LOGICALDRIVES.DRIVELETTER) as Name0,
					  LOGICALDRIVES.STORAGETOTAL as Size0,
					  RTRIM(LOGICALDRIVES.VOLUMELABEL) as VolumeName0,
					  RTRIM(LOGICALDRIVES.SERIALNUMBER) as VolumeSerialNumber0
				FROM LOGICALDRIVES
				INNER JOIN (
					SELECT COMPUTER_IDN FROM COMPUTER 
				)T ON T.COMPUTER_IDN=LOGICALDRIVES.COMPUTER_IDN
		]]>
</SQL>
</Table>
<Table Type="GS_COMPUTER_SYSTEM">
<SQL>
<![CDATA[
				SELECT DISTINCT
					  COMPSYSTEM.COMPUTER_IDN as ResourceID,
					  RTRIM(COMPSYSTEM.MANUFACTURER) as Manufacturer0,
					  CASE WHEN RTRIM(COMPSYSTEM.MANUFACTURER) = 'Apple Computer Inc.' THEN RTRIM(COMPSYSTEM.CHASSISTYPE) ELSE RTRIM(COMPSYSTEM.MODEL) END as Model0,
					  PROCESSOR.PROCCOUNT as NumberOfProcessors0,
					  null as SystemType0
				FROM COMPSYSTEM 
				LEFT JOIN PROCESSOR ON PROCESSOR.COMPUTER_IDN=COMPSYSTEM.COMPUTER_IDN
				INNER JOIN (
					SELECT COMPUTER_IDN FROM COMPUTER 
				)T ON T.COMPUTER_IDN=COMPSYSTEM.COMPUTER_IDN
		]]>
</SQL>
</Table>
<Table Type="GS_NETWORK_ADAPTER_CONFIGUR">
<SQL>
<![CDATA[
				SELECT DISTINCT
					T.COMPUTER_IDN as ResourceID,
					BoundAdapter.DefaultGateway as DefaultIPGateway0, 
					BoundAdapter.DHCPEnabled as DHCPEnabled0, 
					BoundAdapter.DHCPServer as DHCPServer0, 
					BoundAdapter.IPAddress as IPAddress0, 
					null as IPEnabled0, 
					BoundAdapter.SubnetMask as IPSubnet0, 
					BoundAdapter.PhysAddress as MACAddress0, 
					BoundAdapter.AdapterNo as ServiceName0                
				FROM BoundAdapter
				INNER JOIN (
					SELECT COMPUTER_IDN FROM COMPUTER 
				)T ON T.COMPUTER_IDN=BoundAdapter.COMPUTER_IDN
			]]>
</SQL>
</Table>
<Table Type="GS_NETWORK_ADAPTER">
<SQL>
<![CDATA[
        SELECT DISTINCT
					T.COMPUTER_IDN as ResourceID,
					null as AdapterType0, 
					BoundAdapter.Description as Description0, 
					BoundAdapter.PhysAddress MACAddress0, 
					null as Manufacturer0, 
					BoundAdapter.Description as Name0, 
					BoundAdapter.Description as ProductName0, 
					BoundAdapter.AdapterNo as ServiceName0         
				FROM BoundAdapter
				INNER JOIN (
					SELECT COMPUTER_IDN FROM COMPUTER 
				)T ON T.COMPUTER_IDN=BoundAdapter.COMPUTER_IDN		
			]]>
</SQL>
</Table>
	-->
	</Tables>
</configuration>